name: Deploy to EC2 with Docker
on:
  push:
    branches: [pedro-henrique-a-silva-bankme-2024]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the files
        uses: actions/checkout@v3

      - name: Instala o node
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Instala as dependáº½ncias do backend
        run: npm run install:back

      - name: Roda os testes do backend
        run: npm run test:back
     
      - name: Configura credenciais AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login no Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, e push de imagen da API 
        id: build-api-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ secrets.BACKEND_REPOSITORY_NAME}}:$IMAGE_TAG ./bankme
          docker push $ECR_REGISTRY/${{ secrets.BACKEND_REPOSITORY_NAME}}:$IMAGE_TAG
          echo "api_image=$ECR_REGISTRY/${{ secrets.BACKEND_REPOSITORY_NAME}}:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Build, tag, e push de imagen Web
        id: build-web-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/${{ secrets.WEB_REPOSITORY_NAME}}:$IMAGE_TAG ./web
          docker push $ECR_REGISTRY/${{ secrets.WEB_REPOSITORY_NAME}}:$IMAGE_TAG
          echo "api_image=$ECR_REGISTRY/${{ secrets.WEB_REPOSITORY_NAME}}:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Render ECS task definition for fist container
        id: render-api-container
        uses: aws-actions/amazon-ecs-render-task-definition@v2
        with:
          task-definition: ${{ secrets.TASK_DEFINITION_TEMPLATE }}
          container-name: bankme-api
          image: ${{ steps.build-api-image.outputs.api_image }}
  
      - name: Update ECS task definition for second container
        id: render-web-container
        uses: aws-actions/amazon-ecs-render-task-definition@v2
        with:
          task-definition: ${{ secrets.TASK_DEFINITION_TEMPLATE }}
          container-name: bankme-web
          image: ${{ steps.build-web-image.outputs.api_image }}

      - name: Deploy ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-web-container.outputs.task-definition }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          service: ${{ secrets.ECS_SERVICE }}
          wait-for-service-stability: true
           

